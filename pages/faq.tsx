// Imports
import Link from "next/link"; // Routing
import Layout from "@components/Layout"; // Layout wrapper
import styles from "@styles/pages/FAQ.module.scss"; // Page styles

// Types
import type { ReactElement } from "react";

// FAQ page
export default function FAQ(): ReactElement {
  return (
    <Layout>
      <div className={styles.faq}>
        <h2>Frequently Asked Questions</h2>

        {/* What is Mu::ses? */}
        <div className={styles.faq__item}>
          <h3>What is Mu::ses?</h3>
          <p>
          Mu::ses is a collection of 300 unique melodies, generated by AI <a href="https://www.aiva.ai/">(using AIVA)</a>, serialized in text format, and stored on the Polygon blockchain.
          </p>
        </div>

        {/* Why is Mu::ses unique? */}
        <div className={styles.faq__item}>
          <h3>Why is Mu::ses unique?</h3>
          <p>
            A Muse is a source of inspiration, not a finished composition. As they are all stored on-chain, they are here to stay. The idea is to observe how artists around the world and over time will appropriate a Muse to create their own work.  
          </p>
        </div>

        {/* What can I build with Mu::ses? */}
        <div className={styles.faq__item}>
          <h3>What can I build with Mu::ses?</h3>
          <p>
            Anything you want. Be creative! Join the Discord community to discuss and collaborate with artists.
          </p>
        </div>

        {/* Are Muses royalty-free? */}
        <div className={styles.faq__item}>
          <h3>Are Muses royalty-free? </h3>
          <p>
            Yes. They are and will always be royalty free.
          </p>
        </div>

        {/* Why Mu::ses is an on-chain project? */}
        <div className={styles.faq__item}>
          <h3> Why Mu::ses is an on-chain project? </h3>
          <p>
            NFT file data is typically stored on centralized or decentralized servers. However, if digital art metadata is stored off-chain, you can potentially end up with a smart contract that points to a broken link. 
            <br/><br/>
            On the other hand, some projects, such as <a href="https://www.larvalabs.com/autoglyphs">Autoglyphs </a> or <a href="https://www.lootproject.com/">Loot </a>, focus on different approaches and are determined to be 100% on-chain, i.e., the metadata is written into the smart contract.
            <br/><br/>
            Mu::ses project wants to present an approach on how to store music on-chain.
          </p>
        </div>

        {/* How Mu::ses store music on-chain? */}
        <div className={styles.faq__item}>
          <h3> How Mu::ses store music on-chain? </h3>
          <p>
            Obviously, an audio file such as a .mp3 or .wav is much too heavy to be stored on-chain. 
            <br/>
            Unlike traditional audio files, MIDI files don't contain any actual audio data and are therefore much smaller. Instead, they explain what notes are played, when they are played, and how long or loud each note should be. MIDI files are essentially instructions that explain how the song should be produced when connected to a playback device or loaded into a particular program that knows how to interpret the data. You can consider these files as the sheet music of the 21st century. Because of their small size, MIDI files are ideal for sharing and storing musical information.
            <br/><br/>
            All MIDI files were converted to JSON format, then compressed using a lossless text compression algorithm. And finally, the text is encoded in hexadecimal. It is the latter that is stored on the blockchain.
          </p>
        </div>
      </div>
    </Layout>
  );
}
